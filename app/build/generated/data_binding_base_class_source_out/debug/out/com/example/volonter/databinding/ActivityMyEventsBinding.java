// Generated by view binder compiler. Do not edit!
package com.example.volonter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.volonter.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyEventsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final ConstraintLayout eventsElement;

  @NonNull
  public final TextView myEventsApp;

  @NonNull
  public final FrameLayout myFrameLayout;

  @NonNull
  public final RecyclerView myRecyclerEvents;

  @NonNull
  public final RelativeLayout myRelativeLayout;

  private ActivityMyEventsBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull ConstraintLayout eventsElement,
      @NonNull TextView myEventsApp, @NonNull FrameLayout myFrameLayout,
      @NonNull RecyclerView myRecyclerEvents, @NonNull RelativeLayout myRelativeLayout) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.eventsElement = eventsElement;
    this.myEventsApp = myEventsApp;
    this.myFrameLayout = myFrameLayout;
    this.myRecyclerEvents = myRecyclerEvents;
    this.myRelativeLayout = myRelativeLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyEventsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyEventsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_events, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyEventsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      ConstraintLayout eventsElement = (ConstraintLayout) rootView;

      id = R.id.my_events_app;
      TextView myEventsApp = ViewBindings.findChildViewById(rootView, id);
      if (myEventsApp == null) {
        break missingId;
      }

      id = R.id.my_frameLayout;
      FrameLayout myFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (myFrameLayout == null) {
        break missingId;
      }

      id = R.id.my_recycler_events;
      RecyclerView myRecyclerEvents = ViewBindings.findChildViewById(rootView, id);
      if (myRecyclerEvents == null) {
        break missingId;
      }

      id = R.id.my_relativeLayout;
      RelativeLayout myRelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (myRelativeLayout == null) {
        break missingId;
      }

      return new ActivityMyEventsBinding((ConstraintLayout) rootView, bottomNavigationView,
          eventsElement, myEventsApp, myFrameLayout, myRecyclerEvents, myRelativeLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
